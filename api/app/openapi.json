{
    "openapi": "3.0.3",
    "info": {
        "version": "1.0.0",
        "title": "Korvin API"
    },
    "security": [
        {
            "cookieAuth": []
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Show this OpenAPI specification as a JSON object",
                "operationId": "showSpecification",
                "tags": [
                    "Documentation"
                ],
                "security": [],
                "responses": {
                    "200": {
                        "description": "The OpenAPI documentation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions": {
            "post": {
                "summary": "Open a user session (authenticate a user)",
                "operationId": "openSession",
                "tags": [
                    "Auth"
                ],
                "security": [],
                "requestBody": {
                    "description": "The user's credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 16
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Revoke a user session",
                "operationId": "revokeSession",
                "tags": [
                    "Auth"
                ],
                "security": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/forgetpassword": {
            "get": {
                "summary": "Reset the password for the user.",
                "operationId": "forgetPassword",
                "tags": [
                    "User"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email is sent to verify the user's identity and to allow them to reset their password.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/checkTokenValidity": {
            "get": {
                "summary": "Verify User Reset Token",
                "operationId": "checkTokenValidity",
                "tags": [
                    "User"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Check the reset password link validity.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/resetPassword": {
            "post": {
                "summary": "User Password Reset",
                "operationId": "resetPassword",
                "security": [],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "currentUseID",
                        "in": "query",
                        "description": "The userID to verify the user's email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Update the user password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token to verify the user's email",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "current user reset our password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "password",
                                    "currentUseID",
                                    "token"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    },
                                    "currentUseID": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/changePassword": {
            "post": {
                "summary": "Change User Password",
                "operationId": "changePassword",
                "security": [],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "currentUseID",
                        "in": "query",
                        "description": "The userID to verify the user's email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Update the user password",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "current user modifies our password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "password",
                                    "currentUseID"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string"
                                    },
                                    "currentUseID": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/users/{user_id}/tags/": {
            "get": {
                "summary": "List existing tags for a specific user",
                "operationId": "listTagsByUserId",
                "tags": [
                    "User",
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/users/all": {
            "get": {
                "summary": "List existing users",
                "operationId": "listUsers",
                "tags": [
                    "User",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of users to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get the current user",
                "operationId": "getCurrentUser",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "operationId": "createUser",
                "security": [],
                "tags": [
                    "User",
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token to verify the user's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New user's credentials and their email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "username",
                                    "password",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "address",
                                    "company_name"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 16
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 64
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 3,
                                        "maxLength": 320
                                    },
                                    "phone": {
                                        "type": "string",
                                        "minLength": 7,
                                        "maxLength": 32
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/Address"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 160
                                    },
                                    "company_vat": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "url": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 2048
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "tiktok": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "reason": {
                                        "$ref": "#/components/schemas/SignUpReason"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "patch": {
                "summary": "Update the current user's data",
                "operationId": "updateUser",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "description": "The fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 64
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 64
                                    },
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 16
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 3,
                                        "maxLength": 320
                                    },
                                    "phone": {
                                        "type": "string",
                                        "minLength": 7,
                                        "maxLength": 32
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/Address"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 160
                                    },
                                    "company_vat": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "url": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 2048
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "tiktok": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/users/certificates": {
            "post": {
                "summary": "user upload certificates",
                "operationId": "addCertificate",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "description": "The certificate to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "certificates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    }
                }
            },
            "delete": {
                "summary": "Delete a certificate",
                "operationId": "deleteCertificate",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "description": "The certificate to delete",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "certificate_ids": {
                                        "type": "array",
                                        "maxLength": 64,
                                        "items": {
                                            "format": "UUID",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Name (UUID) of the uploaded certificate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/certificates/{id}/file": {
            "get": {
                "summary": "Get a certificate file",
                "operationId": "getCertificateFileById",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A certificate ID",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The certificate file",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get a user by their id",
                "operationId": "getUserById",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A User ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/User"
                    }
                }
            },
            "patch": {
                "summary": "Update a user by id",
                "operationId": "updateUserById",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 16
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 3,
                                        "maxLength": 320
                                    },
                                    "phone": {
                                        "type": "string",
                                        "minLength": 7,
                                        "maxLength": 32
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/Address"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 160
                                    },
                                    "company_vat": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    },
                                    "url": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 2048
                                    },
                                    "instagram": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "tiktok": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "facebook": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/users/{id}/permissions": {
            "post": {
                "summary": "Grant permissions to a user",
                "operationId": "grantPermissions",
                "tags": [
                    "User",
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A User ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of permission ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "type": "integer",
                                            "minimum": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Revoke permissions from a user",
                "operationId": "revokePermissions",
                "tags": [
                    "User",
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A User ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of permission ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "put": {
                "summary": "Update a user's permissions",
                "operationId": "setPermissions",
                "tags": [
                    "User",
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A User ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of permission ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/colors": {
            "get": {
                "summary": "List existing colors",
                "operationId": "listColors",
                "tags": [
                    "Color",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of colors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Color"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new color",
                "operationId": "createColor",
                "tags": [
                    "Color",
                    "List"
                ],
                "requestBody": {
                    "description": "The color description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "summary": "List existing countries",
                "operationId": "listCountries",
                "security": [],
                "tags": [
                    "Country",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new color",
                "operationId": "createColor",
                "tags": [
                    "Color",
                    "List"
                ],
                "requestBody": {
                    "description": "The color description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials": {
            "get": {
                "summary": "List existing materials",
                "operationId": "listMaterials",
                "tags": [
                    "Material",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of materials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orders": {
                                            "items": {
                                                "$ref": "#/components/schemas/Material"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new material",
                "operationId": "createMaterial",
                "tags": [
                    "Material",
                    "List"
                ],
                "requestBody": {
                    "description": "The material description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/brands": {
            "get": {
                "summary": "List existing brands",
                "operationId": "listBrands",
                "tags": [
                    "Brand",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of brands",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orders": {
                                            "items": {
                                                "$ref": "#/components/schemas/Material"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new brand",
                "operationId": "createBrand",
                "tags": [
                    "Brand",
                    "List"
                ],
                "requestBody": {
                    "description": "The brand",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/brands/{id}": {
            "get": {
                "summary": "get a brand",
                "operationId": "getBrandById",
                "tags": [
                    "Brand",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The brand id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "summary": "List existing channels",
                "operationId": "listSalesChannels",
                "tags": [
                    "Channel",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of brands to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orders": {
                                            "items": {
                                                "$ref": "#/components/schemas/SalesChannel"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/channels/{id}": {
            "get": {
                "summary": "get a channel by its id",
                "operationId": "getSalesChannelById",
                "tags": [
                    "Channel",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The sales channel id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    }
                }
            }
        },
        "/types": {
            "get": {
                "summary": "List existing types",
                "operationId": "listTypes",
                "tags": [
                    "Type",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of subtypes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orders": {
                                            "items": {
                                                "$ref": "#/components/schemas/Material"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new type",
                "operationId": "createType",
                "tags": [
                    "Type",
                    "List"
                ],
                "requestBody": {
                    "description": "The type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/types/{id}": {
            "get": {
                "summary": "get a type",
                "operationId": "getTypeById",
                "tags": [
                    "Type",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The type id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subtypes": {
            "get": {
                "summary": "List existing subtypes",
                "operationId": "listSubtypes",
                "tags": [
                    "Subtype",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of subtypes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a new subtype",
                "operationId": "createSubtype",
                "tags": [
                    "Subtype",
                    "List"
                ],
                "requestBody": {
                    "description": "The subtype",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 32
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A subtype",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subtypes/{id}": {
            "get": {
                "summary": "get a subtype",
                "operationId": "getSubtypeById",
                "tags": [
                    "Subtype",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The subtype id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A subtype",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "summary": "List existing tags",
                "operationId": "listTags",
                "tags": [
                    "Tag",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of tags to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a tag",
                "operationId": "createTag",
                "tags": [
                    "Tag"
                ],
                "requestBody": {
                    "description": "The tag description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/tags/{id}": {
            "patch": {
                "summary": "Update a tag",
                "operationId": "updateTag",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The tag description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Remove a tag from all products and delete it",
                "operationId": "deleteTag",
                "tags": [
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/tags/{id}/csv": {
            "get": {
                "summary": "Download a CSV dump for all products of a tag",
                "operationId": "downloadTagCSV",
                "security": [],
                "tags": [
                    "Tag",
                    "CSV"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "A secret token",
                        "schema": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CSV file"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/tags/{tag_id}/products": {
            "put": {
                "summary": "Add a tag to products",
                "operationId": "addProductTags",
                "tags": [
                    "Product",
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "description": "A tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Remove a tag from products",
                "operationId": "removeProductTags",
                "tags": [
                    "Product",
                    "Tag"
                ],
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "description": "A tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/carts/products/{product_id}": {
            "put": {
                "summary": "Add a product to the cart",
                "operationId": "addProductToCart",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully added product to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Remove a product from the cart",
                "operationId": "removeProductFromCart",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully removed product from cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/totals": {
            "get": {
                "summary": "Get the total cart price",
                "operationId": "getCartTotal",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "certificate_ids",
                        "in": "query",
                        "required": true,
                        "description": "A dash-separated list of product IDs for which to add certificates",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shipping_type",
                        "in": "query",
                        "required": true,
                        "description": "the type of shipping",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DAP",
                                "EXW"
                            ]
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "required": true,
                        "description": "the ID of the shipping country",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "coupon_codes",
                        "in": "query",
                        "required": true,
                        "description": "A dash-separated list of product IDs for which to add certificates",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product totals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/payments/{hash}": {
            "get": {
                "summary": "Get the result of a cart payment",
                "operationId": "getCartPayment",
                "tags": [
                    "Cart",
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "A payment hash",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/payments": {
            "post": {
                "summary": "Create a cart payment link",
                "operationId": "createCartPayment",
                "tags": [
                    "Cart",
                    "Payment"
                ],
                "requestBody": {
                    "description": "the cart details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "certificate_ids",
                                    "shipping_type",
                                    "country_id",
                                    "coupon_codes"
                                ],
                                "properties": {
                                    "certificate_ids": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    },
                                    "shipping_type": {
                                        "type": "string",
                                        "enum": [
                                            "DAP",
                                            "EXW"
                                        ]
                                    },
                                    "country_id": {
                                        "$ref": "#/components/schemas/ID"
                                    },
                                    "coupon_codes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "maxLength": 32
                                        },
                                        "maxItems": 8
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "a payment link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/{user_id}/csv": {
            "get": {
                "summary": "Download a CSV dump of the current user's cart",
                "operationId": "downloadCartCSV",
                "security": [],
                "tags": [
                    "Cart",
                    "CSV"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "The Cart owner's ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "A secret token",
                        "schema": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The CSV file"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/carts/{user_id}": {
            "get": {
                "summary": "Get the total price of a cart",
                "operationId": "getCartByUserId",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "A user ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The cart object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "products_group": {
                                            "$ref": "#/components/schemas/ProductsGroup"
                                        },
                                        "totals": {
                                            "type": "object",
                                            "properties": {
                                                "products": {
                                                    "type": "integer",
                                                    "minimum": 0
                                                },
                                                "certificates": {
                                                    "type": "integer",
                                                    "minimum": 0
                                                },
                                                "discount": {
                                                    "type": "integer",
                                                    "maximum": 0
                                                },
                                                "global": {
                                                    "type": "integer",
                                                    "minimum": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/carts/{user_id}/products": {
            "get": {
                "summary": "List cart products cart by user ID",
                "operationId": "listCartByUserId",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of carts"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/view/{hash}": {
            "get": {
                "summary": "Get a list of products in a share view",
                "operationId": "getProductsInShareView",
                "tags": [
                    "Share view"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "A share view hash",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup-tokens": {
            "get": {
                "summary": "List all user tokens",
                "operationId": "listTokens",
                "tags": [
                    "Signup token",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Generate a token to create a new user",
                "operationId": "generateCreationToken",
                "tags": [
                    "Signup token"
                ],
                "responses": {
                    "200": {
                        "description": "A token to create a new user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup-tokens/{token}": {
            "get": {
                "summary": "Get a user token by its token",
                "operationId": "checkUserCreationToken",
                "tags": [
                    "Signup token"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "A User Token",
                        "schema": {
                            "type": "string",
                            "minLength": 36,
                            "maxLength": 36
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A token to create a new user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "summary": "List permissions",
                "operationId": "listPermissions",
                "tags": [
                    "Permission",
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "A list of permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/statistics": {
            "get": {
                "summary": "Get a summary of product statuses",
                "operationId": "getStatusStatistics",
                "tags": [
                    "Statistics",
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "Product counts for each status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/collections/tags": {
            "get" : {
                "summary": "Get all products from collections Tags (from user 2)",
                "operationId": "getProductsFromCollectionsTags",
                "tags": [
                    "Products"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "query",
                        "description": "The tag id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "summary": "Search products",
                "operationId": "searchProducts",
                "tags": [
                    "Product",
                    "List",
                    "Search"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "shop_id",
                        "in": "query",
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "products_kind",
                        "in": "query",
                        "description": "A products kind",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "imported",
                                "exported"
                            ]
                        }
                    },
                    {
                        "name": "keywords",
                        "in": "query",
                        "description": "Space-separated keywords",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Availability filter",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "ACTIVE",
                                "PENDING",
                                "SOLD",
                                "LOCKED"
                            ]
                        }
                    },
                    {
                        "name": "brand_ids",
                        "in": "query",
                        "description": "A dash-separated list of brand ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "color_ids",
                        "in": "query",
                        "description": "A comma-separated list of color ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "material_ids",
                        "in": "query",
                        "description": "A comma-separated list of material ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "tag_ids",
                        "in": "query",
                        "description": "A comma-separated list of tag ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "type_ids",
                        "in": "query",
                        "description": "A dash-separated list of type ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "subtype_ids",
                        "in": "query",
                        "description": "A dash-separated list of subtype ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "description": "A dash-separated list of country ids",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "price_from",
                        "in": "query",
                        "description": "A starting price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "price_to",
                        "in": "query",
                        "description": "An ending price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "wholesale_price_from",
                        "in": "query",
                        "description": "A starting price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "wholesale_price_to",
                        "in": "query",
                        "description": "An ending price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "bought_price_from",
                        "in": "query",
                        "description": "A starting price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "bought_price_to",
                        "in": "query",
                        "description": "An ending price",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "discount_percent_from",
                        "in": "query",
                        "description": "A starting discount percentage",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "discount_percent_to",
                        "in": "query",
                        "description": "An ending discount percentage",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "A starting creation date",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "An ending creation date",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "has_serial",
                        "in": "query",
                        "description": "a serial number",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    {
                        "name": "has_guarantee_card",
                        "in": "query",
                        "description": "A guarantee card",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    {
                        "name": "has_storage_bag",
                        "in": "query",
                        "description": "A storage bag",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    {
                        "name": "has_box",
                        "in": "query",
                        "description": "A box",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "A model name",
                        "schema": {
                            "type": "string",
                            "maxLength": 1024
                        }
                    },
                    {
                        "name": "grade",
                        "in": "query",
                        "description": "A grade",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "S",
                                "SA",
                                "A",
                                "AB",
                                "B",
                                "BC",
                                "C"
                            ]
                        }
                    },
                    {
                        "name": "own_only",
                        "in": "query",
                        "description": "Only include products owned by the current user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a product",
                "operationId": "createProduct",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "description": "A product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "status",
                                    "type_id",
                                    "brand_id",
                                    "name",
                                    "description",
                                    "bought_price",
                                    "bought_currency",
                                    "grade",
                                    "color_ids",
                                    "material_ids",
                                    "has_serial",
                                    "has_guarantee_card",
                                    "has_box",
                                    "has_storage_bag"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "DISABLED",
                                            "ACTIVE",
                                            "PENDING",
                                            "SOLD",
                                            "LOCKED"
                                        ]
                                    },
                                    "gender": {
                                        "type": "boolean"
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "subtype_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "bought_price": {
                                        "type": "integer"
                                    },
                                    "bought_currency": {
                                        "type": "string"
                                    },
                                    "purchase_price_cents": {
                                        "type": "integer"
                                    },
                                    "wholesale_price_cents": {
                                        "type": "integer"
                                    },
                                    "retail_price_cents": {
                                        "type": "integer"
                                    },
                                    "grade": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "object"
                                    },
                                    "color_ids": {
                                        "type": "array"
                                    },
                                    "material_ids": {
                                        "type": "array"
                                    },
                                    "has_serial": {
                                        "type": "boolean"
                                    },
                                    "has_guarantee_card": {
                                        "type": "boolean"
                                    },
                                    "has_box": {
                                        "type": "boolean"
                                    },
                                    "has_storage_bag": {
                                        "type": "boolean"
                                    },
                                    "is_exported_vc": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "summary": "Get a product by its id",
                "operationId": "getProductById",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a product by its id",
                "operationId": "updateProductById",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The product fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "DISABLED",
                                            "ACTIVE",
                                            "PENDING",
                                            "SOLD",
                                            "LOCKED"
                                        ]
                                    },
                                    "original_url": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "boolean"
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "subtype_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "original_name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "bought_price": {
                                        "type": "integer"
                                    },
                                    "bought_currency": {
                                        "type": "string"
                                    },
                                    "purchase_price_cents": {
                                        "type": "integer"
                                    },
                                    "wholesale_price_cents": {
                                        "type": "integer"
                                    },
                                    "retail_price_cents": {
                                        "type": "integer"
                                    },
                                    "grade": {
                                        "type": "string"
                                    },
                                    "size": {
                                        "type": "object"
                                    },
                                    "color_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    },
                                    "material_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    },
                                    "has_serial": {
                                        "type": "boolean"
                                    },
                                    "has_guarantee_card": {
                                        "type": "boolean"
                                    },
                                    "has_box": {
                                        "type": "boolean"
                                    },
                                    "has_storage_bag": {
                                        "type": "boolean"
                                    },
                                    "is_exported_vc": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/tags": {
            "put": {
                "summary": "Update product tags by ID",
                "operationId": "updateProductTags",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The product fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "tag_ids"
                                ],
                                "properties": {
                                    "tag_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/prices": {
            "get": {
                "summary": "Get log of price of product",
                "operationId": "getLogPriceByProductId",
                "tags": [
                    "Product",
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log module id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/images": {
            "post": {
                "summary": "Upload images for a product",
                "operationId": "createProductImages",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The images to upload for the product",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Url of the uploaded image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete images of product",
                "operationId": "deleteProductImage",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The images to upload for the product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "uuids": {
                                        "type": "array",
                                        "maxLength": 64,
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Url of the uploaded image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "summary": "List product orders",
                "operationId": "listOrders",
                "tags": [
                    "Order",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "user_type",
                        "in": "query",
                        "description": "the type of user (buyer or seller)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "seller",
                                "buyer"
                            ]
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of orders to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "orders": {
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "total": {
                                            "type": "integer",
                                            "minimum": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Order a product",
                "operationId": "orderProduct",
                "tags": [
                    "Product",
                    "Order"
                ],
                "requestBody": {
                    "description": "The order description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "product_id",
                                    "channel_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "$ref": "#/components/schemas/ID"
                                    },
                                    "channel_id": {
                                        "description": "the id of the channel",
                                        "type": "number",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/orders/{id}/file": {
            "get": {
                "summary": "get the document of an order",
                "operationId": "getOrderDocument",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the document file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put a document into an order",
                "operationId": "updateOrderDocument",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The document to upload for the order",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/orders/{id}/": {
            "patch": {
                "summary": "Update an order",
                "operationId": "updateOrderById",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The body request to update an order by its id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "comment_admin": {
                                        "type": "string"
                                    },
                                    "comment_user": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "PENDING",
                                            "RECEIVED",
                                            "DELIVERED",
                                            "REFUNDED",
                                            "WAITING_FOR_PAYMENT",
                                            "COMPLETED"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/dump/{seller}": {
            "get": {
                "summary": "Get a dump of products for a specific seller",
                "operationId": "dumpProducts",
                "tags": [
                    "Dump"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "seller",
                        "in": "path",
                        "required": true,
                        "description": "The seller's name",
                        "schema": {
                            "type": "string",
                            "maxLength": 16
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "The seller's authorization token",
                        "schema": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dump of products in the seller's format (usually a csv/tsv file)"
                    }
                }
            }
        },
        "/logs/sessions": {
            "get": {
                "summary": "Get the log sessions",
                "operationId": "getLogSessions",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of log sessions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/sessions/{id}": {
            "get": {
                "summary": "Get the log session",
                "operationId": "getLogSessionById",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log session id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the log session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/sessions/{id}/products": {
            "get": {
                "summary": "Get list of product log that belong to a session",
                "operationId": "getLogProductsBySessionId",
                "tags": [
                    "Product",
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log module id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of product logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/modules": {
            "get": {
                "summary": "Get the log modules",
                "operationId": "getLogModules",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of log modules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/modules/{id}": {
            "get": {
                "summary": "Get the log module",
                "operationId": "getLogModuleById",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log module id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the log module",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/modules/{id}/file": {
            "get": {
                "summary": "Get the log module file",
                "operationId": "getFilePathById",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log module id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the log module",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/products/{id}": {
            "get": {
                "summary": "Get the log product",
                "operationId": "getLogProductById",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "the log product id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the log product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/products": {
            "get": {
                "summary": "Get the log products",
                "operationId": "getLogProducts",
                "tags": [
                    "Logs"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of log products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shop-platforms": {
            "get": {
                "summary": "List available shop platforms",
                "operationId": "listShopPlatforms",
                "tags": [
                    "Shop"
                ],
                "responses": {
                    "200": {
                        "description": "List of shop platforms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "fields": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        },
                                                        "predicates": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "can_import": {
                                                "type": "boolean"
                                            },
                                            "can_export": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shops/details": {
            "get": {
                "summary": "Fetch details of a shop from the shop platform",
                "operationId": "fetchShopDetails",
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "platform",
                        "in": "query",
                        "description": "The platform of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The url of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The API token of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_exporting",
                        "in": "query",
                        "description": "If the shop is exporting or not",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/shops/{id}": {
            "get": {
                "summary": "Get a shop by its id",
                "operationId": "getShopById",
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A shop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shop": {
                                            "$ref": "#/components/schemas/Shop"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a shop",
                "operationId": "updateShop",
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated fields for the shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 64
                                    },
                                    "is_importing": {
                                        "type": "boolean"
                                    },
                                    "is_exporting": {
                                        "type": "boolean"
                                    },
                                    "url": {
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 1024
                                    },
                                    "token": {
                                        "type": "string",
                                        "minLength": 16,
                                        "maxLength": 64
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete a shop",
                "operationId": "deleteShop",
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/products/imported": {
            "get": {
                "summary": "List imported products in shop",
                "operationId": "listShopImportedProducts",
                "tags": [
                    "Product",
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of imported products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/products/exported": {
            "get": {
                "summary": "List exported products in shop",
                "operationId": "listShopExportedProducts",
                "tags": [
                    "Product",
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of exported products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "put": {
                "summary": "Add exported products to shop",
                "operationId": "addShopExportedProducts",
                "tags": [
                    "Product",
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "product_ids"
                                ],
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Add exported products from shop",
                "operationId": "removeShopExportedProducts",
                "tags": [
                    "Product",
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "product_ids"
                                ],
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/products/exported/{product_id}": {
            "patch": {
                "summary": "Update exported product fields",
                "operationId": "updateShopExportedProduct",
                "tags": [
                    "Product",
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "An exported product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "exported_name": {
                                        "type": "string",
                                        "maxLength": 1024,
                                        "nullable": true
                                    },
                                    "exported_description": {
                                        "type": "string",
                                        "maxLength": 1024,
                                        "nullable": true
                                    },
                                    "exported_price": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/attributes": {
            "get": {
                "summary": "List available attributes for a shop",
                "operationId": "listShopAttributes",
                "tags": [
                    "Shop"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists of external attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "external_attributes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "$ref": "#/components/schemas/ID"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "values": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/bindings/{category}": {
            "get": {
                "summary": "List bindings for a shop category",
                "operationId": "getShopBindings",
                "tags": [
                    "Shop",
                    "Binding"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The binding category",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "genders",
                                "types",
                                "brands",
                                "colors",
                                "materials"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists of bindings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bindings": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "korvin_id": {
                                                        "type": "string"
                                                    },
                                                    "attribute_id": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "put": {
                "summary": "Set binding for a shop category",
                "operationId": "addShopBinding",
                "tags": [
                    "Shop",
                    "Binding"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The binding category",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "genders",
                                "types",
                                "brands",
                                "colors",
                                "materials",
                                "tags"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "korvin_id",
                                    "attribute_value_id"
                                ],
                                "properties": {
                                    "korvin_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attribute_value_id": {
                                        "$ref": "#/components/schemas/ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete binding for a shop category",
                "operationId": "deleteShopBinding",
                "tags": [
                    "Shop",
                    "Binding"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The binding category",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "genders",
                                "types",
                                "brands",
                                "colors",
                                "materials",
                                "tags"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "korvin_id",
                                    "attribute_value_id"
                                ],
                                "properties": {
                                    "korvin_id": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attribute_value_id": {
                                        "$ref": "#/components/schemas/ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/import-session": {
            "post": {
                "summary": "Launch a shop import session",
                "operationId": "launchShopImportSession",
                "tags": [
                    "Shop",
                    "Async"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A subscription uuid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "subscription_uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/export-session": {
            "post": {
                "summary": "Launch a shop export session",
                "operationId": "launchShopExportSession",
                "tags": [
                    "Shop",
                    "Async"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A subscription uuid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "subscription_uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops/{id}/setup-session": {
            "post": {
                "summary": "Synchronize a shop",
                "operationId": "launchShopSetupSession",
                "tags": [
                    "Shop",
                    "Async"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The shop id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A subscription uuid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "subscription_uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/shops": {
            "get": {
                "summary": "List existing shops for the current user",
                "operationId": "listShops",
                "tags": [
                    "Shop",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of tags to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    },
                    {
                        "name": "is_exporting",
                        "in": "query",
                        "description": "filter only exporting",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_importing",
                        "in": "query",
                        "description": "filter only importing",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of shops",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Shop"
                                            }
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a shop",
                "operationId": "createShop",
                "tags": [
                    "Shop"
                ],
                "requestBody": {
                    "description": "The shop description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "is_importing",
                                    "is_exporting",
                                    "platform",
                                    "currency",
                                    "url",
                                    "original_url",
                                    "token",
                                    "api_secret",
                                    "day_ranges",
                                    "price_ranges",
                                    "discount_values"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 64
                                    },
                                    "is_importing": {
                                        "type": "boolean"
                                    },
                                    "is_exporting": {
                                        "type": "boolean"
                                    },
                                    "platform": {
                                        "type": "string",
                                        "maxLength": 32
                                    },
                                    "currency": {
                                        "type": "string",
                                        "maxLength": 3
                                    },
                                    "url": {
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 1024
                                    },
                                    "original_url": {
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 1024
                                    },
                                    "token": {
                                        "type": "string",
                                        "minLength": 16,
                                        "maxLength": 64
                                    },
                                    "api_secret": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 64
                                    },
                                    "day_ranges": {
                                        "type": "array",
                                        "minLength": 1,
                                        "maxLength": 64,
                                        "items": {
                                            "type": "number",
                                            "nullable": true,
                                            "minimum": 0
                                        }
                                    },
                                    "price_ranges": {
                                        "type": "array",
                                        "minLength": 1,
                                        "maxLength": 64,
                                        "items": {
                                            "type": "number",
                                            "nullable": true,
                                            "minimum": 0
                                        }
                                    },
                                    "discount_values": {
                                        "type": "array",
                                        "minLength": 1,
                                        "maxLength": 64,
                                        "items": {
                                            "type": "array",
                                            "minLength": 1,
                                            "maxLength": 64,
                                            "items": {
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 100
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/Shop"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/marketplace-platforms": {
            "get": {
                "summary": "List available marketplace platforms",
                "operationId": "listMarketplacePlatforms",
                "tags": [
                    "Marketplace"
                ],
                "responses": {
                    "200": {
                        "description": "List of marketplace platforms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/marketplace-products/{token}": {
            "get": {
                "summary": "List available marketplace platforms",
                "operationId": "listMarketplaceProducts",
                "security": [],
                "tags": [
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV feed of marketplace products",
                        "content": {
                            "text/csv": {}
                        }
                    }
                }
            }
        },
        "/marketplaces/{id}": {
            "get": {
                "summary": "Get a marketplace by its id",
                "operationId": "getMarketplaceById",
                "tags": [
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A marketplace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "marketplace": {
                                            "$ref": "#/components/schemas/Marketplace"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a marketplace",
                "operationId": "updateMarketplace",
                "tags": [
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated fields for the marketplace",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 64
                                    },
                                    "rotate_token": {
                                        "type": "boolean"
                                    },
                                    "ranges": {
                                        "type": "array",
                                        "minLength": 1,
                                        "maxLength": 64,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "to": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "nullable": true
                                                },
                                                "percent": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 100
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete a marketplace",
                "operationId": "deleteMarketplace",
                "tags": [
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/marketplaces/{id}/products/exported": {
            "get": {
                "summary": "List exported products in marketplace",
                "operationId": "listMarketplaceExportedProducts",
                "tags": [
                    "Product",
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "An id of the previous product for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "required": true,
                        "description": "The max amount of products to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of exported products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "put": {
                "summary": "Add exported products to marketplace",
                "operationId": "addMarketplaceExportedProducts",
                "tags": [
                    "Product",
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "product_ids"
                                ],
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "delete": {
                "summary": "Add exported products from marketplace",
                "operationId": "removeMarketplaceExportedProducts",
                "tags": [
                    "Product",
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A list of product ids",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "product_ids"
                                ],
                                "properties": {
                                    "product_ids": {
                                        "type": "array",
                                        "maxLength": 1024,
                                        "items": {
                                            "$ref": "#/components/schemas/ID"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/marketplaces/{id}/products/exported/{product_id}": {
            "patch": {
                "summary": "Update exported product fields",
                "operationId": "updateMarketplaceExportedProduct",
                "tags": [
                    "Product",
                    "Marketplace"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "description": "An exported product id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Fields to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "exported_name": {
                                        "type": "string",
                                        "maxLength": 1024,
                                        "nullable": true
                                    },
                                    "exported_description": {
                                        "type": "string",
                                        "maxLength": 1024,
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Success"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/marketplaces/product-feed/{id}": {
            "get": {
                "summary": "Get a dump of products for a specific marketplace",
                "operationId": "getMarketplaceProductFeed",
                "tags": [
                    "Product Feed"
                ],
                "security": [],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "A marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "description": "The marketplace's authorization token",
                        "schema": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dump of products in the seller's format (usually a csv/tsv file)"
                    }
                }
            }
        },
        "/marketplaces/{id}/export-session": {
            "post": {
                "summary": "Launch a marketplace export session",
                "operationId": "launchMarketplaceExportSession",
                "tags": [
                    "Marketplace",
                    "Async"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The marketplace id",
                        "schema": {
                            "$ref": "#/components/schemas/ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A subscription uuid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "subscription_uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/marketplaces": {
            "get": {
                "summary": "List existing marketplaces for the current user",
                "operationId": "listMarketplaces",
                "tags": [
                    "Marketplace",
                    "List"
                ],
                "parameters": [
                    {
                        "name": "prev_id",
                        "in": "query",
                        "description": "The previous id for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "batch_size",
                        "in": "query",
                        "description": "The max amount of tags to list",
                        "schema": {
                            "type": "integer",
                            "minimum": 8,
                            "maximum": 32,
                            "default": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of marketplaces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "items": {
                                                "$ref": "#/components/schemas/Marketplace"
                                            }
                                        },
                                        "is_last_batch": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Create a marketplace",
                "operationId": "createMarketplace",
                "tags": [
                    "Marketplace"
                ],
                "requestBody": {
                    "description": "The marketplace description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "platform",
                                    "ranges"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 64
                                    },
                                    "platform": {
                                        "type": "string",
                                        "maxLength": 32
                                    },
                                    "ranges": {
                                        "type": "array",
                                        "minLength": 1,
                                        "maxLength": 64,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "to": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "nullable": true
                                                },
                                                "percent": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 100
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/Marketplace"
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/stripe/payment-methods": {
            "get": {
                "summary": "List existing payment methods for the current user",
                "operationId": "listPaymentMethods",
                "tags": [
                    "Stripe",
                    "Payment"
                ],
                "responses": {
                    "200": {
                        "description": "List of payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            },
            "post": {
                "summary": "Add a payment methods for the current user",
                "operationId": "addPaymentMethod",
                "tags": [
                    "Stripe",
                    "Payment"
                ],
                "responses": {
                    "200": {
                        "description": "The url to Stripe service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "url": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/stripe/payment-methods/{pm_id}": {
            "delete": {
                "summary": "Delete a payment method for the current user",
                "operationId": "deletePaymentMethod",
                "tags": [
                    "Stripe",
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "pm_id",
                        "in": "path",
                        "required": true,
                        "description": "A payment method id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The deleted payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/Error"
                    }
                }
            }
        },
        "/webhook/shopify/products/create": {
            "post": {
                "summary": "Webhook triggered when a product is created on Shopify",
                "operationId": "triggerShopifyProductCreateWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Product"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        },
        "/webhook/shopify/products/update": {
            "post": {
                "summary": "Webhook triggered when a product is updated on Shopify",
                "operationId": "triggerShopifyProductUpdateWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Product"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        },
        "/webhook/shopify/products/delete": {
            "post": {
                "summary": "Webhook triggered when a product is deleted on Shopify",
                "operationId": "triggerShopifyProductDeleteWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Product"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        },
        "/webhook/shopify/orders/create": {
            "post": {
                "summary": "Webhook triggered when an order is created on Shopify",
                "operationId": "triggerShopifyOrderCreateWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Order"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        },
        "/webhook/shopify/carts/create": {
            "post": {
                "summary": "Webhook triggered when a cart is created on Shopify",
                "operationId": "triggerShopifyCartCreateWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Cart"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        },
        "/webhook/shopify/carts/update": {
            "post": {
                "summary": "Webhook triggered when a cart is updated on Shopify",
                "operationId": "triggerShopifyCartUpdateWebhook",
                "tags": [
                    "Webhook",
                    "Shopify",
                    "Cart"
                ],
                "security": [],
                "requestBody": {
                    "description": "",
                    "required": true
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "Session-ID"
            }
        },
        "schemas": {
            "ID": {
                "type": "integer",
                "minimum": 1
            },
            "Price": {
                "type": "integer",
                "minimum": 0
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 16
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 3,
                        "maxLength": 320
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 7,
                        "maxLength": 32
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 160
                    },
                    "company_vat": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "url": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 2048
                    },
                    "instagram": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "tiktok": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "facebook": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "linkedin": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                }
            },
            "Date": {
                "nullable": true,
                "type": "integer",
                "minimum": 0
            },
            "Grade": {
                "type": "string",
                "enum": [
                    "S",
                    "SA",
                    "A",
                    "AB",
                    "B",
                    "BC",
                    "C"
                ]
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "DISABLED",
                            "ACTIVE",
                            "PENDING",
                            "SOLD",
                            "LOCKED"
                        ]
                    },
                    "gender": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vendor": {
                        "nullable": true,
                        "type": "string"
                    },
                    "colors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "materials": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "wholesale_price_cents": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "retail_price_cents": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "grade": {
                        "$ref": "#/components/schemas/Grade"
                    },
                    "brand_id": {
                        "type": "integer"
                    },
                    "last_scrape": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "creation_date": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "image_urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ProductsGroup": {
                "type": "object",
                "properties": {
                    "group_id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "products_count": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "share_token": {
                        "type": "string",
                        "minLength": 32,
                        "maxLength": 32
                    }
                }
            },
            "Order": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "placement_date": {
                        "$ref": "#/components/schemas/Date"
                    },
                    "channel_id": {
                        "description": "The id of the sales channel",
                        "type": "string"
                    },
                    "document": {
                        "description": "The document",
                        "type": "string"
                    },
                    "comment_admin": {
                        "description": "the order comment written by the admin",
                        "type": "string"
                    },
                    "comment_user": {
                        "description": "the order comment written bu the user",
                        "type": "string"
                    },
                    "korvin_reception_date": {
                        "$ref": "#/components/schemas/Date"
                    }
                }
            },
            "Country": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The country name",
                        "type": "string"
                    }
                }
            },
            "Color": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The color name",
                        "type": "string"
                    }
                }
            },
            "Material": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The material name",
                        "type": "string"
                    }
                }
            },
            "SalesChannel": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The channel name",
                        "type": "string"
                    },
                    "ratio": {
                        "description": "the price multiplier",
                        "type": "number"
                    },
                    "type": {
                        "description": "type of sale",
                        "type": "boolean"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The tag name",
                        "type": "string"
                    },
                    "usage_count": {
                        "description": "How many products have this tag",
                        "type": "integer",
                        "minimum": 0
                    },
                    "is_system": {
                        "description": "Present and `true` if this is a system tag",
                        "type": "boolean",
                        "required": false
                    }
                }
            },
            "Shop": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The shop name",
                        "type": "string"
                    },
                    "type": {
                        "description": "The shop type",
                        "type": "string",
                        "enum": [
                            "shopify",
                            "prestashop"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 1024
                    }
                }
            },
            "Marketplace": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ID"
                    },
                    "name": {
                        "description": "The marketplace name",
                        "type": "string"
                    },
                    "platform": {
                        "description": "The marketplace platform",
                        "type": "string",
                        "enum": [
                            "vestiaire"
                        ]
                    },
                    "token": {
                        "type": "string",
                        "minLength": 22,
                        "maxLength": 22
                    }
                }
            },
            "Address": {
                "type": "object",
                "required": [
                    "street",
                    "city",
                    "zip",
                    "country_id"
                ],
                "properties": {
                    "street": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128
                    },
                    "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "zip": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                    },
                    "country_id": {
                        "$ref": "#/components/schemas/ID"
                    }
                }
            },
            "SignUpReason": {
                "type": "object",
                "required": [
                    "instant_purchase",
                    "on_demand_retail",
                    "access_b2b_network",
                    "distribute_on_marketplaces"
                ],
                "properties": {
                    "instant_purchase": {
                        "type": "boolean"
                    },
                    "on_demand_retail": {
                        "type": "boolean"
                    },
                    "access_b2b_network": {
                        "type": "boolean"
                    },
                    "distribute_on_marketplaces": {
                        "type": "boolean"
                    }
                }
            }
        },
        "responses": {
            "Success": {
                "description": "A Success object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "Error": {
                "description": "An API Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "description": "The error description",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}